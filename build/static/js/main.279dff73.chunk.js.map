{"version":3,"sources":["../node_modules/typescript/lib sync","components/BasicSettingForm.tsx","utils/getDevices.ts","hooks/useDevices.ts","components/AdvancedSettingForm.tsx","components/Setting.tsx","utils/rtc.ts","components/View.tsx","App.tsx","hooks/useRTC.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BasicSettingForm","props","onLeave","onPublish","onUnpublish","Item","label","name","wrapperCol","offset","Group","type","htmlType","onClick","a","tempAudioStream","AgoraRTC","createStream","audio","video","tempVideoStream","audioPermissionOK","Promise","init","videoPermissionOK","all","then","res","console","warn","close","reject","getDevices","items","log","videos","audios","i","length","item","kind","value","deviceId","push","useDevices","useState","devices","setDevices","error","setError","loading","setLoading","useEffect","result","catch","finally","resolutions","modes","codecs","AdvancedSettingForm","initialValue","map","Option","resolution","mode","codec","Panel","Collapse","layout","labelCol","span","Setting","join","publish","leave","unpublish","bordered","style","margin","onFinish","values","forceRender","header","ConsoleMessageHandler","success","content","info","RTC","messageHandler","client","joined","published","localStream","remoteStreams","params","uid","appId","microphoneId","cameraId","token","channel","onRemoteStreamChanged","streams","onLocalStreamChanged","stream","playStream","streamId","htmlId","getId","find","st","play","closeStream","isPlaying","stop","initClient","createClient","handleEvents","initStream","streamID","screen","err","errorText","this","oldState","ids","shift","isDeleteExpression","on","evt","filter","peerStream","remoteStream","subscribe","VERSION","checkSystemRequirements","View","muted","setMuted","height","width","EyeInvisibleOutlined","unmuteVideo","EyeOutlined","muteVideo","Header","Layout","Content","Footer","App","setLocalStream","setRemoteStreams","rtc","useRef","message","current","useRTC","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.279dff73.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 126;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\ntype Props = {\n  onLeave: () => void;\n  onPublish: () => void;\n  onUnpublish: () => void;\n};\n\nfunction BasicSettingForm(props: Props) {\n  const {\n    onLeave,\n    onPublish,\n    onUnpublish,\n  } = props;\n  return (\n    <>\n      <Form.Item label=\"ID\" name=\"appId\">\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Channel\" name=\"channel\">\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Token\" name=\"token\">\n        <Input />\n      </Form.Item>\n      <Form.Item wrapperCol={{ offset: 8 }}>\n        <Button.Group>\n          <Button type=\"primary\" htmlType=\"submit\">\n            JOIN\n          </Button>\n          <Button type=\"primary\" onClick={onLeave}>\n            LEAVE\n          </Button>\n          <Button type=\"primary\" onClick={onPublish}>\n            PUBLISH\n          </Button>\n          <Button type=\"primary\" onClick={onUnpublish}>\n            UNPUBLISH\n          </Button>\n        </Button.Group>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default BasicSettingForm;","import AgoraRTC from 'agora-rtc-sdk';\n\n\nexport type DeviceInfo = {\n  videos: Array<{\n    name: string;\n    value: string;\n    kind: string;\n  }>;\n  audios: Array<{\n    name: string;\n    value: string;\n    kind: string;\n  }>;\n};\n\nexport default async function getDevices(): Promise<DeviceInfo> {\n  const tempAudioStream = AgoraRTC.createStream({ audio: true, video: false });\n  const tempVideoStream = AgoraRTC.createStream({ audio: false, video: true });\n  const audioPermissionOK = new Promise(resolve => {\n    tempAudioStream.init(() => resolve(null), (e) => resolve(e));\n  });\n  const videoPermissionOK = new Promise(resolve => {\n    tempVideoStream.init(() => resolve(null), (e) => resolve(e));\n  });\n  await Promise.all([audioPermissionOK, videoPermissionOK]).then(res => {\n    if (res[0] !== null) {\n      console.warn('create audio temp stream failed!', res[0]);\n    }\n    if (res[1] !== null) {\n      console.warn('create video temp stream failed!', res[0]);\n    }\n  });\n  tempAudioStream.close();\n  tempVideoStream.close();\n  return new Promise((resolve, reject) => {\n    AgoraRTC.getDevices(items => {\n      console.log(items);\n      const videos = [];\n      const audios = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'videoinput') {\n          let name = item.label;\n          const value = item.deviceId;\n          if (!name) {\n            name = `camera-${videos.length}`;\n          }\n          videos.push({\n            name,\n            value,\n            kind: item.kind,\n          });\n        }\n        if (item.kind === 'audioinput') {\n          let name = item.label;\n          const value = item.deviceId;\n          if (!name) {\n            name = `microphone-${audios.length}`;\n          }\n          audios.push({\n            name,\n            value,\n            kind: item.kind,\n          });\n        }\n      }\n      resolve({ videos, audios });\n    });\n  });\n\n}\n","import { useEffect, useState } from 'react';\nimport getDevices, { DeviceInfo } from '../utils/getDevices';\n\nexport default function useDevices() {\n  const [devices, setDevices] = useState<DeviceInfo>({\n    audios: [],\n    videos: [],\n  });\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    getDevices()\n      .then(result => setDevices(result))\n      .catch(e => setError(e))\n      .finally(() => setLoading(false));\n  }, []);\n  return { devices, error, loading };\n}","import React from 'react';\nimport { Form, Input, Select, Radio } from 'antd';\nimport useDevices from '../hooks/useDevices';\n\ntype Props = {};\n\nconst resolutions = [\n  {\n    name: 'default',\n    value: 'default',\n  },\n  {\n    name: '480p',\n    value: '480p',\n  },\n  {\n    name: '720p',\n    value: '720p',\n  },\n  {\n    name: '1080p',\n    value: '1080p',\n  },\n];\n\nconst modes = ['live', 'rtc'];\nconst codecs = ['h264', 'vp8'];\n\n\nfunction AdvancedSettingForm(props: Props) {\n  const { devices, loading } = useDevices();\n  if (loading) return null;\n  return (\n    <>\n      <Form.Item label=\"UID\" name=\"uid\">\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"CAMERA\" name=\"cameraId\" initialValue={devices.videos[0]?.value}>\n        <Select>\n          {devices.videos.map(video => (\n            <Select.Option\n              key={video.value}\n              value={video.value}\n            >\n              {video.name}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"MICROPHONE\" name=\"microphoneId\" initialValue={devices.audios[0]?.value}>\n        <Select>\n          {devices.audios.map(audio => (\n            <Select.Option key={audio.value} value={audio.value}>\n              {audio.name}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"CAMERA RESOLUTION\" name=\"cameraResolution\" initialValue={resolutions[0].value}>\n        <Select>\n          {resolutions.map(resolution => (\n            <Select.Option key={resolution.value} value={resolution.value}>\n              {resolution.name}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item label=\"MODE\" name=\"mode\" initialValue={modes[0]}>\n        <Radio.Group>\n          {modes.map(mode => (\n            <Radio value={mode} key={mode}>\n              {mode}\n            </Radio>\n          ))}\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item label=\"CODEC\" name=\"codec\" initialValue={codecs[0]}>\n        <Radio.Group>\n          {codecs.map(codec => (\n            <Radio value={codec} key={codec}>\n              {codec}\n            </Radio>\n          ))}\n        </Radio.Group>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default AdvancedSettingForm;","import React from 'react';\nimport { Card, Collapse, Form } from 'antd';\nimport BasicSettingForm from './BasicSettingForm';\nimport AdvancedSettingForm from './AdvancedSettingForm';\nimport { RTCPayload } from '../hooks/useRTC';\n\nconst { Panel } = Collapse;\n\ntype Props = {\n  join: RTCPayload['join'];\n  publish: RTCPayload['publish'];\n  leave: RTCPayload['leave'];\n  unpublish: RTCPayload['unpublish'];\n};\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nexport default function Setting(props: Props) {\n  const { join, publish, leave, unpublish } = props;\n  const onFinish = (values: RTCPayload['params']) => {\n    join(values).catch(console.log);\n  };\n  return (\n    <Card bordered style={{ margin: 24 }}>\n      <Form {...layout} onFinish={onFinish}>\n        <BasicSettingForm\n          onLeave={() => leave().catch(console.log)}\n          onPublish={() => publish().catch(console.log)}\n          onUnpublish={() => unpublish().catch(console.log)}\n        />\n        <Collapse style={{}}>\n          <Panel forceRender key=\"advancedSetting\" header=\"Advanced Setting\">\n            <AdvancedSettingForm />\n          </Panel>\n        </Collapse>\n      </Form>\n    </Card>\n  );\n}","import AgoraRTC, { Client, ClientConfig, Stream } from 'agora-rtc-sdk';\nimport { isDeleteExpression } from 'typescript';\n\nexport type Params = {\n  mode: ClientConfig['mode'];\n  codec: ClientConfig['codec'];\n  uid: string | number;\n  appId: string;\n  microphoneId: string;\n  cameraId: string;\n  token: string;\n  channel: string;\n};\n\ntype OnRemoteStreamChanged = (streams: Stream[]) => void;\ntype OnLocalStreamChanged = (localStream: Stream | null) => void;\ntype MessageHandler = {\n  success: (content: string) => void;\n  error: (content: string) => void;\n  info: (content: string) => void;\n};\n\nconst ConsoleMessageHandler = {\n  success: (content: string) => console.log(content),\n  error: (content: string) => console.error(content),\n  info: (content: string) => console.info(content),\n};\nexport default class RTC {\n  public client: Client | null = null;\n\n  public joined = false;\n\n  public published = false;\n\n  public localStream: Stream | null = null;\n\n  public remoteStreams: Stream[] = [];\n\n  public params: Params = {\n    mode: 'live',\n    codec: 'h264',\n    uid: '',\n    appId: '',\n    microphoneId: '',\n    cameraId: '',\n    token: '',\n    channel: '',\n  };\n\n  private messageHandler = ConsoleMessageHandler;\n\n  constructor({\n    messageHandler,\n  }: {\n    messageHandler: MessageHandler\n  }) {\n    if (this.messageHandler) {\n      this.messageHandler = messageHandler;\n    }\n    console.log(`agora sdk version: ${AgoraRTC.VERSION} compatible: ${AgoraRTC.checkSystemRequirements()}`);\n  }\n\n  public onRemoteStreamChanged: OnRemoteStreamChanged = streams =>\n    console.log(streams);\n\n  public onLocalStreamChanged: OnLocalStreamChanged = stream =>\n    console.log(stream);\n\n  public playStream = (streamId: string | number, htmlId: string) => {\n    if (this.localStream?.getId() === streamId) {\n\n      this.localStream.play(htmlId);\n      return;\n    }\n\n    const stream = this.remoteStreams\n      .find(st => st.getId() === streamId);\n    if (stream) {\n      stream?.play(htmlId);\n    }\n\n  };\n\n  public closeStream = (streamId: string | number) => {\n    let stream;\n\n    if (this.localStream?.getId() === streamId) {\n      stream = this.localStream;\n    } else {\n      stream = this.remoteStreams\n        .find(st => st.getId() === streamId);\n    }\n\n    if (stream) {\n      if (stream.isPlaying()) stream.stop();\n      stream?.close();\n    }\n  };\n\n  public initClient = async (params: Params) => {\n    this.params = params;\n    this.client = AgoraRTC.createClient({\n      mode: params.mode, codec: params.codec,\n    });\n    this.handleEvents();\n    return new Promise((resolve, reject) => {\n      this.client?.init(params.appId, () => {\n        resolve();\n      }, e => {\n        reject(e);\n      });\n    });\n  };\n\n  public initStream = async () => {\n    // create local stream\n    const { uid, microphoneId, cameraId } = this.params;\n    this.localStream = AgoraRTC.createStream({\n      streamID: uid,\n      audio: true,\n      video: true,\n      screen: false,\n      microphoneId,\n      cameraId,\n    });\n\n    return new Promise((resolve, reject) => {\n      // initialize local stream. Callback function executed after intitialization is done\n      this.localStream?.init(() => {\n        console.log('init local stream success');\n        this.onLocalStreamChanged(this.localStream!);\n        // play stream with html element id \"local_stream\"\n        resolve();\n      }, (err) => {\n        reject(err);\n        console.error('init local stream failed ', err);\n      });\n    });\n  };\n\n\n\n  public join = async (params: Params) => {\n    if (!this.client) {\n      await this.initClient({ ...params });\n    }\n    return new Promise((resolve, reject) => {\n      if (this.joined) {\n        const errorText = 'You\\'r already joined';\n        this.messageHandler.error(errorText);\n        return reject(new Error(errorText));\n      }\n      return this.client?.join(\n        params.token ? params.token : null,\n        params.channel,\n        params.uid ? +params.uid : null,\n        async uid => {\n          this.messageHandler.success(`join channel: ${params.channel} success, uid: ${uid}`);\n          this.joined = true;\n          this.params.uid = uid;\n          await this.initStream();\n          resolve();\n        }, err => {\n          this.messageHandler.error('join channel failed');\n          reject(err);\n        },\n      );\n    });\n\n  };\n\n\n  public publish = async () => {\n    return new Promise((resolve, reject) => {\n      if (!this.client) {\n        this.messageHandler.error('Please Join Room First');\n        return reject(new Error('Please Join Room First'));\n      }\n      if (this.published) {\n        this.messageHandler.error('Your already published');\n        return reject(new Error('Your already published'));\n      }\n      const oldState = this.published;\n\n      // publish localStream\n      this.client?.publish(this.localStream!, err => {\n        this.published = oldState;\n        this.messageHandler.error(`publish failed:${err}`);\n        reject(new Error(`publish failed:${err}`));\n      });\n      this.published = true;\n      this.messageHandler.success('publish success');\n      return resolve();\n    });\n  };\n\n\n  public unpublish = async () => {\n    return new Promise((resolve, reject) => {\n      if (!this.client) {\n        this.messageHandler.error('Please Join Room First');\n        reject(new Error('Please Join Room First'));\n        return;\n      }\n      if (!this.published) {\n        this.messageHandler.error('Your didn\b\b\b\\'t publish');\n        reject(new Error('Your didn\b\b\b\\'t publish'));\n        return;\n      }\n      const oldState = this.published;\n      this.client?.unpublish(this.localStream!, err => {\n        this.published = oldState;\n        this.messageHandler.error(`unpublish failed: ${err}`);\n        reject(new Error(`unpublish failed: ${err}`));\n      });\n      this.published = false;\n      this.messageHandler.success('unpublish success');\n      resolve();\n    });\n  };\n\n  public leave = async () => {\n    return new Promise((resolve, reject) => {\n      if (!this.client) {\n        this.messageHandler.error('Please Join Room First');\n        reject(new Error('Please Join Room First'));\n        return;\n      }\n      if (!this.joined) {\n        this.messageHandler.error('You are not in channel');\n        reject(new Error('You are not in channel'));\n        return;\n      }\n      this.client.leave(() => {\n        // stop stream\n        if (this.localStream?.isPlaying()) {\n          this.localStream.stop();\n        }\n        // close stream\n        this.localStream?.close();\n        const ids = [];\n        for (let i = 0; i < this.remoteStreams.length; i++) {\n          const stream = this.remoteStreams.shift();\n          const id = stream?.getId();\n          ids.push(id);\n\n          if (stream?.isPlaying()) {\n            stream.stop();\n          }\n        }\n        this.localStream = null;\n        this.remoteStreams = [];\n        this.onLocalStreamChanged(this.localStream);\n        this.onRemoteStreamChanged(this.remoteStreams);\n        this.client = null;\n        this.messageHandler.success('client leaves channel success');\n        this.published = false;\n        this.joined = false;\n        resolve(isDeleteExpression);\n      }, err => {\n        this.messageHandler.error(`channel leave failed: ${err}`);\n        reject(new Error(`channel leave failed: ${err}`));\n      });\n    });\n    /**\n     * Leaves an AgoraRTC Channel\n     * This method enables a user to leave a channel.\n     * */\n\n  };\n\n\n  private handleEvents = () => {\n    if (!this.client) return;\n    this.client.on('error', (err) => {\n      console.log(err);\n    });\n    // Occurs when the peer user leaves the channel; for example, the peer user calls Client.leave.\n    this.client.on('peer-leave', evt => {\n      const id = evt.uid;\n      console.log('id', evt);\n      const streams = this.remoteStreams.filter(e => id !== e.getId());\n      const peerStream = this.remoteStreams.find(e => id === e.getId());\n      if (peerStream && peerStream.isPlaying()) {\n        peerStream.stop();\n      }\n      this.remoteStreams = streams;\n      this.onRemoteStreamChanged(this.remoteStreams);\n      this.messageHandler.info('peer leave');\n      console.log('peer-leave', id);\n    });\n    // Occurs when the local stream is published.\n    this.client.on('stream-published', evt => {\n      this.messageHandler.success('stream published success');\n    });\n    // Occurs when the remote stream is added.\n    this.client.on('stream-added', evt => {\n      const remoteStream = evt.stream;\n      const id = remoteStream.getId();\n      this.messageHandler.info(`stream-added uid: ${id}`);\n\n      if (id !== this.params.uid) {\n        this.client?.subscribe(remoteStream, {}, err => {\n          console.log('stream subscribe failed', err);\n        });\n      }\n      console.log('stream-added remote-uid: ', id);\n    });\n    // Occurs when a user subscribes to a remote stream.\n    this.client.on('stream-subscribed', evt => {\n      const remoteStream = evt.stream;\n      const id = remoteStream.getId();\n      this.remoteStreams.push(remoteStream);\n      this.onRemoteStreamChanged(this.remoteStreams);\n      this.messageHandler.info(`stream-subscribed remote-uid: ${id}`);\n    });\n    // Occurs when the remote stream is removed; for example, a peer user calls Client.unpublish.\n    this.client.on('stream-removed', evt => {\n      const remoteStream = evt.stream;\n      const id = remoteStream.getId();\n      this.messageHandler.info(`stream-removed uid: ${id}`);\n\n      if (remoteStream.isPlaying()) {\n        remoteStream.stop();\n      }\n      this.remoteStreams = this.remoteStreams.filter(stream => {\n        return stream.getId() !== id;\n      });\n      this.onRemoteStreamChanged(this.remoteStreams);\n      console.log('stream-removed remote-uid: ', id);\n    });\n    this.client.on('onTokenPrivilegeWillExpire', () => {\n      // After requesting a new token\n      // this.client.renewToken(token);\n      this.messageHandler.info('onTokenPrivilegeWillExpire');\n\n      console.log('onTokenPrivilegeWillExpire');\n    });\n    this.client.on('onTokenPrivilegeDidExpire', () => {\n      // After requesting a new token\n      // client.renewToken(token);\n      this.messageHandler.info('onTokenPrivilegeDidExpire');\n\n      console.log('onTokenPrivilegeDidExpire');\n    });\n  };\n\n}\n","import React, { useEffect, useState } from 'react';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { RTCPayload } from '../hooks/useRTC';\n\ntype Props = {\n  stream: RTCPayload['localStream'];\n  playStream: RTCPayload['playStream'],\n  closeStream: RTCPayload['closeStream'],\n};\n\nfunction View(props: Props) {\n  const { stream, playStream, closeStream } = props;\n  const [muted, setMuted] = useState(false);\n  const mute = () => {\n    stream?.muteVideo();\n    setMuted(true);\n  };\n  const unmute = () => {\n    stream?.unmuteVideo();\n    setMuted(false);\n  };\n  const streamId = stream?.getId();\n  const htmlId = `stream_${stream}`;\n  useEffect(() => {\n    streamId && playStream(streamId, htmlId);\n    return () => {\n      streamId && closeStream(streamId);\n    };\n  }, [htmlId, streamId, playStream, closeStream]);\n  return (\n    <>\n      <div id={htmlId} style={{ height: 200, width: 300 }} />\n      {\n        muted ?\n          <EyeInvisibleOutlined onClick={unmute} /> :\n          <EyeOutlined onClick={mute} />\n      }\n    </>\n  );\n}\n\nexport default View;","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport Setting from './components/Setting';\nimport useRTC from './hooks/useRTC';\nimport View from './components/View';\nimport './App.css';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [{\n    join,\n    publish,\n    leave,\n    unpublish,\n    localStream,\n    remoteStreams,\n    playStream,\n    closeStream,\n  }] = useRTC();\n  return (\n    <Layout className=\"layout\">\n      <Header className=\"header\">\n        Basic Communication\n      </Header>\n      <Content>\n        <Row>\n          <Col span={12}>\n            <Setting\n              join={join}\n              publish={publish}\n              leave={leave}\n              unpublish={unpublish}\n            />\n          </Col>\n          <Col span={12}>\n            {\n              [localStream, ...remoteStreams].map(stream => (\n                stream && <View\n                  key={stream.getId()}\n                  stream={stream}\n                  playStream={playStream}\n                  closeStream={closeStream}\n                />\n              ))\n            }\n\n          </Col>\n        </Row>\n      </Content>\n      <Footer>Created by Leo</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { Stream } from 'agora-rtc-sdk';\nimport { useState, useRef } from 'react';\nimport { message } from 'antd';\nimport RTC from '../utils/rtc';\n\n\nexport type RTCPayload = {\n  params: RTC['params'],\n  join: RTC['join'],\n  publish: RTC['publish'],\n  unpublish: RTC['unpublish'],\n  leave: RTC['leave'],\n  playStream: RTC['playStream'],\n  closeStream: RTC['closeStream'],\n  localStream: Stream | null,\n  remoteStreams: Array<Stream>,\n};\n\nexport default function useRTC() {\n  const [\n    localStream,\n    setLocalStream,\n  ] = useState<Stream | null>(null);\n  const [\n    remoteStreams,\n    setRemoteStreams,\n  ] = useState<Array<Stream>>([]);\n  const onRemoteStreamChanged = (streams: Array<Stream>) => {\n    setRemoteStreams(streams);\n  };\n  const onLocalStreamChanged = (stream: Stream | null) => {\n    setLocalStream(stream);\n  };\n  const rtc = useRef(new RTC({\n    messageHandler: message,\n  })).current;\n  rtc.onRemoteStreamChanged = onRemoteStreamChanged;\n  rtc.onLocalStreamChanged = onLocalStreamChanged;\n  return [{\n    params: rtc.params,\n    join: rtc.join,\n    publish: rtc.publish,\n    unpublish: rtc.unpublish,\n    leave: rtc.leave,\n    playStream: rtc.playStream,\n    closeStream: rtc.closeStream,\n    localStream,\n    remoteStreams,\n  }];\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}